// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SanriJP.API.DataContext;

namespace SanriJP.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210512211020_Init2")]
    partial class Init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SanriJP.API.Models.Auction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingPrice1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingPrice2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingPrice3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParkingPrice4")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auctions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USS Osaka",
                            ParkingPrice1 = "11000",
                            ParkingPrice2 = "12000",
                            ParkingPrice3 = "11000",
                            ParkingPrice4 = "13000"
                        });
                });

            modelBuilder.Entity("SanriJP.API.Models.CarModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mersedes Benz"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Audi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nissan"
                        });
                });

            modelBuilder.Entity("SanriJP.API.Models.CarOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("AuctionFees")
                        .HasColumnType("int");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CarNumber")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FOB")
                        .HasColumnType("int");

                    b.Property<string>("LotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Parking")
                        .HasColumnType("tinyint");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Price10Percent")
                        .HasColumnType("int");

                    b.Property<int>("Recycle")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("Total_FOB")
                        .HasColumnType("int");

                    b.Property<int>("Transport")
                        .HasColumnType("int");

                    b.Property<int>("TransportationCommission")
                        .HasColumnType("int");

                    b.Property<string>("VINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("ClientId");

                    b.ToTable("CarOrders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 150000,
                            AuctionFees = 7700,
                            AuctionId = 1,
                            CarModel = "Mersedes Benz",
                            CarNumber = false,
                            ClientId = 1,
                            CreatedAt = new DateTime(2021, 5, 12, 21, 10, 19, 310, DateTimeKind.Utc).AddTicks(6696),
                            FOB = 65000,
                            LotNumber = "00521",
                            Parking = (byte)1,
                            Price = 145000,
                            Price10Percent = 14500,
                            Recycle = 11550,
                            Total = 198750,
                            Total_FOB = 380000,
                            Transport = 20000,
                            TransportationCommission = 19000,
                            VINNumber = "q1w2e3",
                            Year = "2020"
                        });
                });

            modelBuilder.Entity("SanriJP.API.Models.CarResale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Income")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NewClientId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerClientId")
                        .HasColumnType("int");

                    b.Property<string>("SalePrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartingPrice")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarOrderId");

                    b.HasIndex("NewClientId");

                    b.HasIndex("OwnerClientId");

                    b.ToTable("CarResales");
                });

            modelBuilder.Entity("SanriJP.API.Models.CarSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuctionFees")
                        .HasColumnType("int");

                    b.Property<int>("AuctionId")
                        .HasColumnType("int");

                    b.Property<string>("CarModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Price10Percent")
                        .HasColumnType("int");

                    b.Property<int>("Recycle")
                        .HasColumnType("int");

                    b.Property<int>("SalesFees")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("VINNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuctionId");

                    b.HasIndex("ClientId");

                    b.ToTable("CarSales");
                });

            modelBuilder.Entity("SanriJP.API.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AtWhatPrice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Confirm")
                        .HasColumnType("bit");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeFOB")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AtWhatPrice = "default",
                            Confirm = false,
                            Country = "Kyrgyzstan",
                            CreatedAt = new DateTime(2021, 5, 12, 21, 10, 19, 309, DateTimeKind.Utc).AddTicks(6629),
                            Email = "qweyn.qwe@gmail.com",
                            FullName = "Rysbekov Chekhton",
                            Login = "CHEKHTON",
                            Password = "123qwe",
                            PhoneNumber = "996996996996",
                            Service = "default",
                            SizeFOB = "2000"
                        });
                });

            modelBuilder.Entity("SanriJP.API.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2021, 5, 12, 21, 10, 19, 306, DateTimeKind.Utc).AddTicks(4067),
                            FullName = "Adminio",
                            Login = "ADMIN",
                            Password = "Admin123!@#",
                            Role = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2021, 5, 12, 21, 10, 19, 307, DateTimeKind.Utc).AddTicks(9684),
                            FullName = "Managereto",
                            Login = "MANAGER",
                            Password = "Manager123!@#",
                            Role = "Manager"
                        });
                });

            modelBuilder.Entity("SanriJP.API.Models.EmployeeRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("SanriJP.API.Models.CarOrder", b =>
                {
                    b.HasOne("SanriJP.API.Models.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanriJP.API.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("SanriJP.API.Models.CarResale", b =>
                {
                    b.HasOne("SanriJP.API.Models.CarOrder", "CarOrder")
                        .WithMany()
                        .HasForeignKey("CarOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanriJP.API.Models.Client", "NewClient")
                        .WithMany()
                        .HasForeignKey("NewClientId");

                    b.HasOne("SanriJP.API.Models.Client", "OwnerClient")
                        .WithMany()
                        .HasForeignKey("OwnerClientId");

                    b.Navigation("CarOrder");

                    b.Navigation("NewClient");

                    b.Navigation("OwnerClient");
                });

            modelBuilder.Entity("SanriJP.API.Models.CarSale", b =>
                {
                    b.HasOne("SanriJP.API.Models.Auction", "Auction")
                        .WithMany()
                        .HasForeignKey("AuctionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SanriJP.API.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auction");

                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
